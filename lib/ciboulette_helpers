#!/bin/bash

if [ -z "$LOADED" ]; then

LOADED=1

function writeln {
  NL="\n"
  if [ "$1" = "-n" ]; then
    NL=""
    shift
  fi

  printf "$( colorize "$*" )$NL"
}

# some handy colors
function colorize {
  local YELLOW='\033[0;33m'
  local GREEN='\033[0;32m'
  local RED='\033[0;31m'
  local COLOR_OFF='\033[0m'

  local STRING="$*"

  STRING=${STRING//<comment>/$YELLOW}
  STRING=${STRING//<\/comment>/$COLOR_OFF}

  STRING=${STRING//<info>/$GREEN}
  STRING=${STRING//<\/info>/$COLOR_OFF}

  STRING=${STRING//<error>/$RED}
  STRING=${STRING//<\/error>/$COLOR_OFF}

  ( echo -e "$STRING" | sed -e 's/^-[a-z]* //' )
}

function help_show_argument {
  echo " $( colorize "$1" )    $( colorize "${*:2}" )"
}

function str_strip_xml {
  local STRING="$*"
  echo $STRING | sed -e "s:<\(.*\)>\(.*\)</\1>:\1:g"
}

# @param string The string to find the length of
function str_length {
  # try hard to strip color codes
  local STRING=$( str_strip_xml "$*" )
  echo "$STRING" | wc -c | grep -Eo "[0-9]+"
}

# @param string A message to display
# @param string The command to execute
function step {
  local MSG="$1"
  local ALIGN=$(( 80 - $( str_length "$MSG" ) ))

  writeln -n "$MSG"

  shift

  local CMD="$*"

  if (( $DEBUG )); then
    echo
    echo "    $CMD"
  else
    if [ -z "$LOG_FILE" ]; then
      local STATUS=$( eval $CMD > /dev/null 2>&1 ; echo $? )
    else
      local STATUS=$( eval "$CMD >> $LOG_FILE 2>&1" ; echo $? )
    fi

    if [ -z "$STATUS" -o "$STATUS" -eq 0 ]; then
      printf "%${ALIGN}s\n" $( colorize "<info>[ok]</info>" )
    else
      printf "%${ALIGN}s\n" $( colorize "<error>[fail]</error>" )
    fi

    return $STATUS
  fi
}

# @param string Question to ask
# @param string Name of the variable to fetch the answer in
function ask {
  writeln -n "$( colorize "<info>${1}:</info>" ) "
  read $2
}

# @param string Question to ask
# @param string Name of the variable to fetch the answer in
function confirm {
  writeln -n "$( colorize "<info>${1}</info> <info>[y/N]</info>" ) "
  read -n1 TMP

  if [ "$TMP" = "y" ]; then
    eval $2=1
  else
    eval $2=0
  fi

  if [ ! -z "$TMP" ]; then
    echo
  fi
}

fi